% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toLDAvis.R
\name{toLDAvis}
\alias{toLDAvis}
\title{Convert flat Trellis model to LDAvis format}
\usage{
toLDAvis(model.file = NULL, frequency.file = NULL, beta = NULL,
  theta = NULL, vocab = NULL, doc.length = NULL,
  term.frequency = NULL, launch = FALSE)
}
\arguments{
\item{model.file}{.RData file containing Trellis model. Must include beta, theta, vocab. Leaves treated as flat model.}

\item{frequency.file}{.RData file containing term.frequency and doc.length. Must provide either frequency.file or both doc.length and term.frequency.}

\item{doc.length}{Number of tokens per document, as a vector of integers}

\item{term.frequency}{Term frequencies, as a vector of integers.}

\item{launch}{Logical flag. If FALSE, toLDAvis returns the JSON created. Else, launches LDAvis}
}
\description{
TODO(tfs): documentation in R doc
}
\examples{
# Values from "sample_documents.RData":
# "filenames" and "filecontents"
if (!requireNamespace(stm)) { stop("Package 'stm' is required for this example") }
if (!requireNamespace(LDAvis)) { stop("Package 'LDAvis' is required for this example") }

out.path <- "example_model.RData"
ldavis.data.path <- "example_model_ldavis_data.RData"

processed <- stm::textProcessor(filecontents, metadata=as.data.frame(filenames))
prepped <- stm::prepDocuments(processed$documents, processed$vocab, processed$meta)
model <- stm::stm(documents=prepped$documents, vocab=prepped$vocab, K=k, init.type="Spectral")

# Format for Trellis
beta <- exp(model$beta$logbeta[[1]])
theta <- model$theta
vocab <- prepped$vocab

filenames <- lapply(prepped$meta$filenames, function (x) { gsub("^(\\\\s|\\\\r|\\\\n|\\\\t)+|(\\\\s|\\\\n|\\\\r|\\\\t)+$", "", x) })
titles <- lapply(filenames, function (x) { URLdecode(gsub("_", " ", x)) })

save(beta, theta, vocab, titles, filenames, file=out.path)

# Calculate/save document lengths and corpus-wide term frequencies
doc.length <- lapply(prepped$documents, function (x) { sum(x[2,]) })
term.frequency <- rep(0, length(prepped$vocab))

for (doc in prepped$documents) {
		for (i in seq(dim(doc)[2])) {
			oldval <- term.frequency[[doc[1,i]]]
			term.frequency[[doc[1,i]]] <- oldval + doc[2,i]
		}
}

term.frequency <- unlist(term.frequency)
doc.length <- unlist(doc.length)

save(term.frequency, doc.length, file=ldavis.data.path)

# Use the saved model and ldavis data files to launch LDAvis
toLDAvis(model.file = out.path, frequency.file = ldavis.data.path, lauch=TRUE)
}
\seealso{
\pkg{\link{simpleProcessLDA}}

\pkg{\link{simpleProcessSTM}}

\pkg{\link{LDAvis}}

\pkg{\link{servr}}

\pkg{\link{tsne}}
}
